{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","quantityPages","Math","ceil","pages","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","itemsOnPage","setItemsOnPage","setCurrentPage","firstItem","lastItem","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQd,EAAW,EAAGW,GAY5B,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YAAa,CAAEC,SAA0B,IAAhBR,IAD3B,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAvBS,kBAEbT,EADa,IAAhBD,EACgBA,EAAc,EACdA,IAeX,oBAWDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IACT,YAAa,CAAEM,OAAQD,IAASZ,IAFpC,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMT,EAAaW,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IACb,YAAa,CAAEC,SAAUR,IAAgBE,IAD3C,SAIE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAnDU,kBAEdT,EADHD,IAAgBE,EACAF,EAAc,EACdA,IA2CX,0BChEJc,EAAQvB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBmB,EAApB,KACMC,GAAapB,EAAc,GAAKiB,EAChCI,EAAarB,EAAciB,EAAe,GAC5CjB,EAAciB,EACd,GACEK,EAAeR,EAAMS,MAAMH,EAAWC,GAM5C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCoB,EAAY,EAD7C,cACoDC,EADpD,aAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOR,EACPS,SApBW,SAACC,GACpBR,EAAe,GACfD,GAAgBS,EAAMC,OAAOH,QAavB,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAO,GACPC,QAASkB,EACTjB,YAAaA,EACbC,aAAckB,IAGhB,6BACGG,EAAaX,KAAI,SAAAmB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCzDlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.63c3958b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (arg: number) => void ;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const quantityPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, quantityPages);\n  const leftScroll = () => (\n    (currentPage !== 1)\n      ? onPageChange(currentPage - 1)\n      : onPageChange(currentPage)\n  );\n  const rightScroll = () => (\n    (currentPage !== quantityPages)\n      ? onPageChange(currentPage + 1)\n      : onPageChange(currentPage)\n  );\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item', { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={leftScroll}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map(page => (\n          <li\n            className={classNames(\n              'page-item', { active: page === currentPage },\n            )}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li className={classNames(\n          'page-item', { disabled: currentPage === quantityPages },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === quantityPages}\n            onClick={rightScroll}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsOnPage, setItemsOnPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItem = (currentPage - 1) * itemsOnPage;\n  const lastItem = ((currentPage * itemsOnPage) < 42)\n    ? currentPage * itemsOnPage\n    : 42;\n  const visibleItems = items.slice(firstItem, lastItem);\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setCurrentPage(1);\n    setItemsOnPage(+event.target.value);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsOnPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={itemsOnPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}